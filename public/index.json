[{"categories":null,"contents":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/basic/introduction/","summary":" Hello World A sample go program is show here.\npackage main import \u0026#34;fmt\u0026#34; func main() { message := greetMe(\u0026#34;world\u0026#34;) fmt.Println(message) } func greetMe(name string) string { return \u0026#34;Hello, \u0026#34; + name + \u0026#34;!\u0026#34; } Run the program as below:\n$ go run hello.go Variables Normal Declaration:\nvar msg string msg = \u0026#34;Hello\u0026#34; Shortcut:\nmsg := \u0026#34;Hello\u0026#34; Constants const Phi = 1.618 ","tags":null,"title":"Introduction"},{"categories":null,"contents":" Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.Println(\u0026#34;Value is\u0026#34;, b) func getPointer () (myPointer *int) { a := 234 return \u0026amp;a a := new(int) *a = 234 Pointers point to a memory location of a variable. Go is fully garbage-collected.\nType Conversion i := 2 f := float64(i) u := uint(i) Slice slice := []int{2, 3, 4} slice := []byte(\u0026#34;Hello\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/basic/types/","summary":"Strings str := \u0026#34;Hello\u0026#34; Multiline string\nstr := `Multiline string` Numbers Typical types\nnum := 3 // int num := 3. // float64 num := 3 + 4i // complex128 num := byte(\u0026#39;a\u0026#39;) // byte (alias for uint8) Other Types\nvar u uint = 7 // uint (unsigned) var p float32 = 22.7 // 32-bit float Arrays // var numbers [5]int numbers := [...]int{0, 0, 0, 0, 0} Pointers func main () { b := *getPointer() fmt.","tags":null,"title":"Basic Types"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Georges\u0026#34;,\u0026#34;Dietrich\u0026#34;} for i, val := range entry { fmt.Printf(\u0026#34;At position %d, the character %s is present\\n\u0026#34;, i, val) n := 0 x := 42 for n != x { n := guess() } ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/basic/flow-control/","summary":"Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) Switch switch day { case \u0026#34;sunday\u0026#34;: // cases don\u0026#39;t \u0026#34;fall through\u0026#34; by default! fallthrough case \u0026#34;saturday\u0026#34;: rest() default: work() } Loop for count := 0; count \u0026lt;= 10; count++ { fmt.Println(\u0026#34;My counter is at\u0026#34;, count) } entry := []string{\u0026#34;Georges\u0026#34;,\u0026#34;Dietrich\u0026#34;} for i, val := range entry { fmt.","tags":null,"title":"‡¶´‡ßç‡¶≤‡ßã ‡¶ï‡¶®‡ßç‡¶ü‡ßç‡¶∞‡ßã‡¶≤"},{"categories":null,"contents":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/go/advanced/files/","summary":" Condition if day == \u0026#34;sunday\u0026#34; || day == \u0026#34;saturday\u0026#34; { rest() } else if day == \u0026#34;monday\u0026#34; \u0026amp;\u0026amp; isTired() { groan() } else { work() } if _, err := doThing(); err != nil { fmt.Println(\u0026#34;Uh oh\u0026#34;) ","tags":null,"title":"Manipulation de Fichiers"},{"categories":null,"contents":" Variable NAME=\u0026#34;Georges\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","date":"January 1, 0001","hero":"/images/default-hero.jpg","permalink":"http://localhost:1313/notes/bash/basic/","summary":" Variable NAME=\u0026#34;Georges\u0026#34; echo $NAME echo \u0026#34;$NAME\u0026#34; echo \u0026#34;${NAME} Condition if [[ -z \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is empty\u0026#34; elif [[ -n \u0026#34;$string\u0026#34; ]]; then echo \u0026#34;String is not empty\u0026#34; fi ","tags":null,"title":"Variables Bash"},{"categories":["De base"],"contents":"Ce post d\u0026rsquo;exemple permet de tester les √©l√©ments suivants :\nCat√©gorie et sous-cat√©gorie dans la barre lat√©rale. L\u0026rsquo;image de couverture et autres images se trouvent dans le dossier images situ√© dans le r√©pertoire de ce post. Rendu de diff√©rents m√©dias comme les images, les tweets, les vid√©os YouTube, les vid√©os Vimeo, etc. Exemple d\u0026rsquo;Image Exemple de Tweet Owl bet you\u0026#39;ll lose this staring contest ü¶â pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 Exemple de Vid√©o YouTube Exemple de Vid√©o Vimeo ","date":"June 8, 2020","hero":"/posts/category/sub-category/rich-content/images/forest.jpg","permalink":"http://localhost:1313/posts/category/sub-category/rich-content/","summary":"Ce post d\u0026rsquo;exemple permet de tester les √©l√©ments suivants :\nCat√©gorie et sous-cat√©gorie dans la barre lat√©rale. L\u0026rsquo;image de couverture et autres images se trouvent dans le dossier images situ√© dans le r√©pertoire de ce post. Rendu de diff√©rents m√©dias comme les images, les tweets, les vid√©os YouTube, les vid√©os Vimeo, etc. Exemple d\u0026rsquo;Image Exemple de Tweet Owl bet you\u0026#39;ll lose this staring contest ü¶â pic.twitter.com/eJh4f2zncC\n\u0026mdash; San Diego Zoo Wildlife Alliance (@sandiegozoo) October 26, 2021 Exemple de Vid√©o YouTube Exemple de Vid√©o Vimeo ","tags":["Markdown","Organisation du Contenu","Multilingue"],"title":"Contenu Riche"},{"categories":null,"contents":"Ceci est un article exemple destin√© √† tester les √©l√©ments suivants :\nImage de h√©ros par d√©faut. Diff√©rents shortcodes. Alerte Les alertes suivantes sont disponibles dans ce th√®me.\nCeci est une alerte exemple avec type=\u0026quot;success\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;danger\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;warning\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;info\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;dark\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;primary\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;secondary\u0026quot;. Image Une image exemple sans aucun attribut. Une image exemple avec les attributs height et width. Une image centr√©e avec les attributs height et width. Une image avec l\u0026rsquo;attribut float. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies. Praesent tellus risus, eleifend vel efficitur ac, venenatis sit amet sem. Ut ut egestas erat. Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat. Suspendisse nec ipsum eu erat finibus dictum. Morbi volutpat nulla purus, vel maximus ex molestie id. Nullam posuere est urna, at bningilla eros venenatis quis.\nFusce vulputate dolor augue, ut porta sapien bningilla nec. Vivamus commodo erat felis, a sodales lectus finibus nec. In a pulvinar orci. Maecenas suscipit eget lorem non pretium. Nulla aliquam a augue nec blandit. Curabitur ac urna iaculis, ornare ligula nec, placerat nulla. Maecenas aliquam nisi vitae tempus vulputate.\nS√©paration Ce th√®me prend en charge la division de la page en autant de colonnes que vous le souhaitez.\nDivision en deux colonnes Colonne de gauche Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nColonne de droite Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nDivision en trois colonnes Colonne de gauche Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras egestas lectus sed leo ultricies ultricies.\nColonne du milieu Aenean dignissim dictum ex. Donec a nunc vel nibh placerat interdum.\nColonne de droite Fusce ut leo turpis. Morbi consectetur sed lacus vitae vehicula. Cras gravida turpis id eleifend volutpat.\nEspace Vertical Ajoutez un espace vertical entre deux lignes.\nCeci est la premi√®re ligne. Ceci est la deuxi√®me ligne. Elle devrait avoir un espace vertical de 4rem avec la ligne pr√©c√©dente.\nVid√©o Vid√©o de Rahul Sharma provenant de Pexels.\nMermaid Voici quelques exemples de shortcode mermaid.\nGraphique:\ngraph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] Diagramme de s√©quence:\nsequenceDiagram participant Alice participant Bob Alice-\u003e\u003eGeorges: Bonjour Georges, comment √ßa va? loop V√©rification de la sant√© Georges-\u003e\u003eGeorges: Lutte contre l'hypocondrie end Note right of Georges: Les pens√©es rationnelles pr√©viennent! Georges--\u003e\u003eAlice: Super! Georges-\u003e\u003eBob: Et toi? Bob--\u003e\u003eGeorges: Tr√®s bien! Diagramme de Gantt:\ngantt dateFormat YYYY-MM-DD title Ajout du diagramme de GANTT √† mermaid excludes weekdays 2014-01-10 section Une section T√¢che termin√©e :done, des1, 2014-01-06,2014-01-08 T√¢che active :active, des2, 2014-01-09, 3d T√¢che future : des3, after des2, 5d T√¢che future2 : des4, after des3, 5d Diagramme de classe:\nclassDiagram Class01 \u003c|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --\u003e C2 : O√π suis-je? Class09 --* C3 Class09 --|\u003e Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 \u003c--\u003e C2: √âtiquette cool Graphique Git:\ngitGraph commit id: \"ZERO\" branch develop commit id:\"A\" checkout main commit id:\"ONE\" checkout develop commit id:\"B\" checkout main commit id:\"TWO\" cherry-pick id:\"A\" commit id:\"THREE\" checkout develop commit id:\"C\" Diagramme ER:\nerDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses Gist PDF Int√©gr√© Page: / Previous Next ","date":"June 8, 2020","hero":"/posts/shortcodes/boat.jpg","permalink":"http://localhost:1313/posts/shortcodes/","summary":"Ceci est un article exemple destin√© √† tester les √©l√©ments suivants :\nImage de h√©ros par d√©faut. Diff√©rents shortcodes. Alerte Les alertes suivantes sont disponibles dans ce th√®me.\nCeci est une alerte exemple avec type=\u0026quot;success\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;danger\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;warning\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;info\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;dark\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;primary\u0026quot;. Ceci est une alerte exemple avec type=\u0026quot;secondary\u0026quot;.","tags":null,"title":"Exemples de Shortcodes"},{"categories":["De base"],"contents":"Bonjour ! Ceci est un post d\u0026rsquo;introduction. Ce post permet de tester les √©l√©ments suivants :\nL\u0026rsquo;image de couverture se trouve dans le m√™me r√©pertoire que le post. Ce post doit appara√Ætre en haut de la barre lat√©rale. L\u0026rsquo;auteur du post doit √™tre le m√™me que celui sp√©cifi√© dans le fichier author.yaml. ","date":"June 8, 2020","hero":"/posts/introduction/hero.svg","permalink":"http://localhost:1313/posts/introduction/","summary":"Bonjour ! Ceci est un post d\u0026rsquo;introduction. Ce post permet de tester les √©l√©ments suivants :\nL\u0026rsquo;image de couverture se trouve dans le m√™me r√©pertoire que le post. Ce post doit appara√Ætre en haut de la barre lat√©rale. L\u0026rsquo;auteur du post doit √™tre le m√™me que celui sp√©cifi√© dans le fichier author.yaml. ","tags":["De base","Multilingue"],"title":"Introduction"},{"categories":null,"contents":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;‚Äî\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted bnom another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n‚Äî Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Inline¬†Markdown¬†In¬†Table italics bold strikethrough¬†code Code Blocks Code block with backticks html \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;UTF-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;UTF-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list bnuit Apple Orange Banana Dairy Milk Cheese Other Elements ‚Äî abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL+ALT+Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nMath Rendering Block math: $$ \\varphi = 1+\\bnac{1} {1+\\bnac{1} {1+\\bnac{1} {1+\\cdots} } } $$\nEmoji Rendering üôà :see_no_evil: üôâ :hear_no_evil: üôä :speak_no_evil:\nThe above quote is excerpted bnom Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"June 8, 2020","hero":"/posts/markdown-sample/hero.svg","permalink":"http://localhost:1313/posts/markdown-sample/","summary":"This is a sample post intended to test the followings:\nA different post author. Table of contents. Markdown content rendering. Math rendering. Emoji rendering. Markdown Syntax Rendering Headings The following HTML \u0026lt;h1\u0026gt;‚Äî\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur?","tags":null,"title":"Markdown Samples"}]